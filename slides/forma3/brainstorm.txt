Part1:

- How-to read the documentation
  - where : cppreference.com
  - what's the important things to read
  - also godbolt.org quick-bench.com

- nullptr
  - use everywhere you used NULL

- Range-based `for` loop
  - what it actually does

- Type inference (auto)
  - almost always auto
  - why is it useful
  - why is it important
  - concepts are better

- `override`, `final`
  - use override everywhere
  - use final carefully

- Lambdas
  - what is it, how does it work.
  - why is it useful

- RAII
  - what is it
  - why is it useful
  - why is it important

- Smart pointers (unique_ptr vs shared_ptr)
  - in the doc
  - what is it
  - why is it useful
  - why is it important
  - what you should use

- initializer_list
  - in the doc
  - what is it

- Ctor delegation
  - why is it useful

- constexpr
  - why is it useful
  - when should you use it
  - why is it important

- Undefined behavior
  - Difference with unspecified behavior
  - what is it
  - why is it important

Part2:

- Rvalue references and move constructors
  - what is it
  - why is it useful
  - why is it important
  - std::move, std::forward
  - wtf is going on

- Containers
  - in the doc

- Algorithms (+ iterators concepts)
  - in the doc
  - wtf is an iterator

- Generic code
  - what is it
  - why is it useful

- Template metaprog
  - what is it
  - why is it useful

- ADL
  - what is it
  - why is it important

- SFINAE
  - what is it

- Variadic templates
  - what is it
  - why is it useful

